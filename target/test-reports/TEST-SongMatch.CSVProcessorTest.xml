<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="GHY" name="SongMatch.CSVProcessorTest" tests="1" errors="0" failures="1" skipped="0" time="2.93" timestamp="2023-05-21T23:32:00">
          <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="D:\Tools\jre1.8.0_202\bin"/><property name="java.vm.version" value="25.202-b08"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=";"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="user.script" value=""/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value=""/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="D:\Cocode\scala_tut\klarrio_test\song_matching"/><property name="java.runtime.version" value="1.8.0_202-b08"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="java.endorsed.dirs" value="D:\Tools\jre1.8.0_202\lib\endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="C:\Users\guhao\AppData\Local\Temp\"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="log4j.ignoreTCL" value="true"/><property name="user.variant" value=""/><property name="os.name" value="Windows 10"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="jnidispatch.path" value="C:\Users\guhao\AppData\Local\Temp\jna-98711272\jna8411435108367213949.dll"/><property name="java.library.path" value="C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;D:\Tools\sbt-1.8.2\bin;D:\Tools\spark-3.4.0-bin-hadoop3\bin;D:\Tools\WinUtils\hadoop\bin;C:\Users\guhao\AppData\Local\Microsoft\WindowsApps;;D:\Tools\Microsoft VS Code\bin;C:\Users\guhao\AppData\Local\Coursier\data\bin;."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sbt.ipcsocket.tmpdir" value="C:\Users\guhao\AppData\Local\Temp\.sbte8aa0466\ipcsocket"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.0"/><property name="swoval.tmpdir" value="C:\Users\guhao\AppData\Local\Temp\.sbte8aa0466\swoval"/><property name="user.home" value="C:\Users\guhao"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="D:\Tools\sbt-1.8.2\\bin\sbt-launch.jar"/><property name="user.name" value="guhao"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="xsbt.boot.Boot"/><property name="java.home" value="D:\Tools\jre1.8.0_202"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_202"/><property name="java.ext.dirs" value="D:\Tools\jre1.8.0_202\lib\ext;C:\windows\Sun\Java\lib\ext"/><property name="sun.boot.class.path" value="D:\Tools\jre1.8.0_202\lib\resources.jar;D:\Tools\jre1.8.0_202\lib\rt.jar;D:\Tools\jre1.8.0_202\lib\sunrsasign.jar;D:\Tools\jre1.8.0_202\lib\jsse.jar;D:\Tools\jre1.8.0_202\lib\jce.jar;D:\Tools\jre1.8.0_202\lib\charsets.jar;D:\Tools\jre1.8.0_202\lib\jfr.jar;D:\Tools\jre1.8.0_202\classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.stderr.encoding" value="cp437"/><property name="file.separator" value="\"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.stdout.encoding" value="cp437"/><property name="sun.desktop" value="windows"/><property name="sun.cpu.isalist" value="amd64"/>
    </properties>
          <testcase classname="SongMatch.CSVProcessorTest" name="inputTitleProc should transform input_title according to the business rules" time="2.93">
                      <failure message="Array(matchedData(&quot;1&quot;, &quot;Un mundo de zurdos&quot;, &quot;SomeKey&quot;, &quot;Writer1&quot;, &quot;Performer1&quot;, &quot;SongCode1&quot;, &quot;SongTitle1&quot;, &quot;Writer1&quot;), matchedData(&quot;2&quot;, &quot;hello&quot;, &quot;SomeKey&quot;, &quot;Writer2&quot;, &quot;Performer2&quot;, &quot;SongCode2&quot;, &quot;SongTitle2&quot;, &quot;Writer2&quot;), matchedData(&quot;3&quot;, &quot;i singing thing&quot;, &quot;SomeKey&quot;, &quot;Writer3&quot;, &quot;Performer3&quot;, &quot;SongCode3&quot;, &quot;SongTitle3&quot;, &quot;Writer3&quot;)) did not contain the same elements as Array(matchedData(&quot;1&quot;, &quot;MUNDODEZURDO&quot;, &quot;SomeKey&quot;, &quot;Writer1&quot;, &quot;Performer1&quot;, &quot;SongCode1&quot;, &quot;SongTitle1&quot;, &quot;Writer1&quot;), matchedData(&quot;2&quot;, &quot;HELO&quot;, &quot;SomeKey&quot;, &quot;Writer2&quot;, &quot;Performer2&quot;, &quot;SongCode2&quot;, &quot;SongTitle2&quot;, &quot;Writer2&quot;), matchedData(&quot;3&quot;, &quot;I SINGIN THIN&quot;, &quot;SomeKey&quot;, &quot;Writer3&quot;, &quot;Performer3&quot;, &quot;SongCode3&quot;, &quot;SongTitle3&quot;, &quot;Writer3&quot;))" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Array(matchedData(&quot;1&quot;, &quot;Un mundo de zurdos&quot;, &quot;SomeKey&quot;, &quot;Writer1&quot;, &quot;Performer1&quot;, &quot;SongCode1&quot;, &quot;SongTitle1&quot;, &quot;Writer1&quot;), matchedData(&quot;2&quot;, &quot;hello&quot;, &quot;SomeKey&quot;, &quot;Writer2&quot;, &quot;Performer2&quot;, &quot;SongCode2&quot;, &quot;SongTitle2&quot;, &quot;Writer2&quot;), matchedData(&quot;3&quot;, &quot;i singing thing&quot;, &quot;SomeKey&quot;, &quot;Writer3&quot;, &quot;Performer3&quot;, &quot;SongCode3&quot;, &quot;SongTitle3&quot;, &quot;Writer3&quot;)) did not contain the same elements as Array(matchedData(&quot;1&quot;, &quot;MUNDODEZURDO&quot;, &quot;SomeKey&quot;, &quot;Writer1&quot;, &quot;Performer1&quot;, &quot;SongCode1&quot;, &quot;SongTitle1&quot;, &quot;Writer1&quot;), matchedData(&quot;2&quot;, &quot;HELO&quot;, &quot;SomeKey&quot;, &quot;Writer2&quot;, &quot;Performer2&quot;, &quot;SongCode2&quot;, &quot;SongTitle2&quot;, &quot;Writer2&quot;), matchedData(&quot;3&quot;, &quot;I SINGIN THIN&quot;, &quot;SomeKey&quot;, &quot;Writer3&quot;, &quot;Performer3&quot;, &quot;SongCode3&quot;, &quot;SongTitle3&quot;, &quot;Writer3&quot;))
	at org.scalatest.matchers.MatchersHelper$.indicateFailure(MatchersHelper.scala:392)
	at org.scalatest.matchers.dsl.ResultOfContainWord.theSameElementsAs(ResultOfContainWord.scala:205)
	at SongMatch.CSVProcessorTest.$anonfun$new$1(CSVProcessorTest.scala:46)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.flatspec.AnyFlatSpecLike$$anon$5.apply(AnyFlatSpecLike.scala:1832)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.flatspec.AnyFlatSpec.withFixture(AnyFlatSpec.scala:1686)
	at org.scalatest.flatspec.AnyFlatSpecLike.invokeWithFixture$1(AnyFlatSpecLike.scala:1830)
	at org.scalatest.flatspec.AnyFlatSpecLike.$anonfun$runTest$1(AnyFlatSpecLike.scala:1842)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest(AnyFlatSpecLike.scala:1842)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest$(AnyFlatSpecLike.scala:1824)
	at org.scalatest.flatspec.AnyFlatSpec.runTest(AnyFlatSpec.scala:1686)
	at org.scalatest.flatspec.AnyFlatSpecLike.$anonfun$runTests$1(AnyFlatSpecLike.scala:1900)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:427)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests(AnyFlatSpecLike.scala:1900)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests$(AnyFlatSpecLike.scala:1899)
	at org.scalatest.flatspec.AnyFlatSpec.runTests(AnyFlatSpec.scala:1686)
	at org.scalatest.Suite.run(Suite.scala:1114)
	at org.scalatest.Suite.run$(Suite.scala:1096)
	at org.scalatest.flatspec.AnyFlatSpec.org$scalatest$flatspec$AnyFlatSpecLike$$super$run(AnyFlatSpec.scala:1686)
	at org.scalatest.flatspec.AnyFlatSpecLike.$anonfun$run$1(AnyFlatSpecLike.scala:1945)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.flatspec.AnyFlatSpecLike.run(AnyFlatSpecLike.scala:1945)
	at org.scalatest.flatspec.AnyFlatSpecLike.run$(AnyFlatSpecLike.scala:1943)
	at org.scalatest.flatspec.AnyFlatSpec.run(AnyFlatSpec.scala:1686)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)
	at sbt.TestRunner.runTest$1(TestFramework.scala:147)
	at sbt.TestRunner.run(TestFramework.scala:162)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:330)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:290)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:330)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:330)
	at sbt.TestFunction.apply(TestFramework.scala:342)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>